name: Version Tagged

on: 
  push:
    tags:
      - 'v*.*'

env:
  GOOGLE_APPLICATION_CREDENTIALS: '${{ secrets.GOOGLE_CLOUD_ARTIFACTS_REPOSITORY_CREDENTIALS }}'
  GOOGLE_CLOUD_PROJECT: "${{ vars.GOOGLE_CLOUD_PROJECT }}"

jobs:
  call-build-workflow:
    uses: ./.github/workflows/build.yml

  deploy_wheel:
    needs: call-build-workflow
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install twine
          python -m pip install keyrings.google-artifactregistry-auth
      - id: 'auth'
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GOOGLE_CLOUD_ARTIFACTS_REPOSITORY_CREDENTIALS }}"
      - name: Configure gcloud CLI
        run: |
          gcloud config set project $GOOGLE_CLOUD_PROJECT
          gcloud config set artifacts/repository python-modules
          gcloud config set artifacts/location us-east1
          gcloud config set account sa-github-gcr@${GOOGLE_CLOUD_PROJECT}.iam.gserviceaccount.com
          gcloud auth activate-service-account sa-github-gcr@${GOOGLE_CLOUD_PROJECT}.iam.gserviceaccount.com --key-file=$GOOGLE_APPLICATION_CREDENTIALS
          gcloud artifacts print-settings python > ~/.pypirc

      - name: Upload to Artifact Registry
        run: |
          python -m twine upload --verbose --repository python-modules dist/*
      
      - name: Upload to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          python -m twine upload --verbose --repository pypi dist/*